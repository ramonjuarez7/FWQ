using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace API_Engine1.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class MapaController : ControllerBase
    {
        static String mappath = Path.GetFullPath("..\\mapa.txt");
        static String mapa;
        static int numAtracciones = 5;
        String[,] mapaData;

        private void leerMapa()
        {
            StreamReader leer = new StreamReader(mappath);
            mapaData = new String[numAtracciones, 4];
            String cadena;
            for (int i = 0; (cadena = leer.ReadLine()) != null; i++)
            {
                for (int j = 0; j < 3; j++)
                {
                    mapaData[i, j] = cadena.Split(';')[j];
                }
            }
            leer.Close();
        }

        public String[,] ConstruirMapa()
        {
            String[,] mapa = {

                { "# ", "# ","# ","# ","# ","# ","# ","# ","# ","# ","# ","# ","# ","# ","# ","# ","# ","# ","# ","# ","# ","#"},
                { "# ", ". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ","#"},
                { "# ", ". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ","#"},
                { "# ", ". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ","#"},
                { "# ", ". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ","#"},
                { "# ", ". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ","#"},
                { "# ", ". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ","#"},
                { "# ", ". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ","#"},
                { "# ", ". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ","#"},
                { "# ", ". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ","#"},
                { "# ", ". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ","#"},
                { "# ", ". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ","#"},
                { "# ", ". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ","#"},
                { "# ", ". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ","#"},
                { "# ", ". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ","#"},
                { "# ", ". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ","#"},
                { "# ", ". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ","#"},
                { "# ", ". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ","#"},
                { "# ", ". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ","#"},
                { "# ", ". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ","#"},
                { "# ", ". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ",". ","#"},
                {"# ", "# ","# ","# ","# ","# ","# ","# ","# ","# ","# ","# ","# ","# ","# ","# ","# ","# ","# ","# ","# ","#" }

            };

            int x;
            int y;
            String tiempo;

            for (int i = 0; i < numAtracciones; i++)
            {
                x = Int32.Parse(mapaData[i, 1].Split(':')[0]);
                y = Int32.Parse(mapaData[i, 1].Split(':')[1]);
                tiempo = mapaData[i, 2];
                if (mapa[x, y].Equals(". "))
                {
                    mapa[x, y] = tiempo;
                    if (Int32.Parse(tiempo) < 10)
                    {
                        mapa[x, y] += " ";
                    }
                }
            }
            return mapa;
        }

        public String ConstruyeStringMapa(String[,] mapa)
        {
            StringBuilder sb = new StringBuilder();
            for (int i = 0; i < 22; i++)
            {
                for (int j = 0; j < 22; j++)
                {
                    sb.Append(mapa[i, j]);
                }
                sb.Append('\n');
            }
            //Console.WriteLine(sb.ToString());
            return sb.ToString();
        }

        [HttpGet]
        public string Get()
        {
            leerMapa();
            String mapa = ConstruyeStringMapa(ConstruirMapa());
            return mapa;
        }
    }
}